name: Bump SDK Version

on:
  workflow_dispatch:  # Manual trigger
  repository_dispatch:  # Remote trigger
    types: [bump-sdk-version]

# Prevent multiple runs from executing simultaneously
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  bump-sdk-version:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.DEPLOY_PAT_TOKEN }}
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Get latest commit hash from portia-sdk-python
        id: get-latest-commit
        run: |
          LATEST_COMMIT=$(curl -s https://api.github.com/repos/portiaAI/portia-sdk-python/commits/main | jq -r '.sha')
          echo "latest_commit=$LATEST_COMMIT" >> $GITHUB_OUTPUT
          echo "Latest commit hash: $LATEST_COMMIT"

      - name: Check and cleanup existing SDK bump PRs
        id: check-existing-pr
        run: |
          # Always clean up existing PRs and branches when a new run starts
          # This ensures the new run can proceed with a clean slate
          uv run .github/scripts/cleanup_branch.py \
            --repo-name ${{ github.repository }} \
            --title-pattern "ðŸ¤– Automated: Bump SDK version" \
            --branch-pattern "automated/bump-sdk-version" \
            --delete \
            --token ${{ secrets.DEPLOY_PAT_TOKEN }}
          
          echo "existing_pr=false" >> $GITHUB_OUTPUT
          echo "Any existing SDK bump PRs have been cleaned up"

      - name: Update pyproject.toml with latest commit hash
        run: |
          # Use the standalone script to update pyproject.toml
          uv run .github/scripts/update_sdk_version.py "${{ steps.get-latest-commit.outputs.latest_commit }}"

      - name: Create Pull Request
        id: create-pr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.DEPLOY_PAT_TOKEN }}
          branch: automated/bump-sdk-version-${{ steps.get-latest-commit.outputs.latest_commit }}
          title: "ðŸ¤– Automated: Bump SDK version to latest commit"
          body: |
            ## ðŸ¤– Automated SDK Version Bump
            
            This PR updates the portia-sdk-python dependency to the latest commit hash.
            
            **Latest commit:** `${{ steps.get-latest-commit.outputs.latest_commit }}`
            
            **Changes:**
            - Updated `pyproject.toml` to use the latest commit hash from portiaAI/portia-sdk-python
            
            ---
            *This PR was automatically generated by the bump-sdk-version workflow.*
          commit-message: "ðŸ¤– Bump SDK version to ${{ steps.get-latest-commit.outputs.latest_commit }}"
          delete-branch: false
          labels: |
            automated
            sdk-update

      - name: Wait for PR checks to complete
        id: wait-for-checks
        run: |
          # Run the script and capture the result
          if uv run .github/scripts/wait_for_checks.py \
            --repo-name ${{ github.repository }} \
            --pr-number ${{ steps.create-pr.outputs.pull-request-number }} \
            --timeout-minutes 10 \
            --wait-seconds 30 \
            --ignore-checks "vercel" \
            --token ${{ secrets.DEPLOY_PAT_TOKEN }}; then
            echo "status=success" >> $GITHUB_OUTPUT
          else
            EXIT_CODE=$?
            if [ $EXIT_CODE -eq 1 ]; then
              echo "status=failure" >> $GITHUB_OUTPUT
            elif [ $EXIT_CODE -eq 2 ]; then
              echo "status=timeout" >> $GITHUB_OUTPUT
            else
              echo "status=failure" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Auto-merge PR if checks pass
        if: steps.wait-for-checks.outputs.status == 'success'
        run: |
          PR_NUMBER="${{ steps.create-pr.outputs.pull-request-number }}"
          
          if [ -z "$PR_NUMBER" ]; then
            echo "Error: PR number is empty. Cannot merge PR."
            exit 1
          fi

          gh pr merge $PR_NUMBER \
            --squash \
            --delete-branch \
            --admin \
            --subject "ðŸ¤– Merge: Bump SDK version to ${{ steps.get-latest-commit.outputs.latest_commit }}" \
            --body "Automated merge of SDK version bump"; then
            echo "PR #$PR_NUMBER merged successfully!"
        env:
          GH_TOKEN: ${{ secrets.DEPLOY_PAT_TOKEN }}

      - name: Close PR and notify Slack on failure
        if: steps.wait-for-checks.outputs.status == 'failure' || steps.wait-for-checks.outputs.status == 'timeout'
        run: |
          PR_NUMBER="${{ steps.create-pr.outputs.pull-request-number }}"
          
          if [ -z "$PR_NUMBER" ]; then
            echo "Error: PR number is empty. Cannot close PR."
            exit 1
          fi
          
          echo "Closing failed PR #$PR_NUMBER..."
          
          # Close the PR with a comment explaining why
          gh pr close $PR_NUMBER \
            --delete-branch \
            --comment "This PR was automatically closed because the checks failed. Status: ${{ steps.wait-for-checks.outputs.status }}"
          
          echo "PR #$PR_NUMBER closed successfully"
        env:
          GH_TOKEN: ${{ secrets.DEPLOY_PAT_TOKEN }}

      - name: Notify Slack on failure
        if: steps.wait-for-checks.outputs.status == 'failure' || steps.wait-for-checks.outputs.status == 'timeout'
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: '${{ vars.SLACK_GITHUB_ALERTS_CHANNEL }}'
          slack-message: |
            ðŸš¨ *Docs SDK Version Bump Failed*
            *Failing Checks:* <https://github.com/${{ github.repository }}/pull/${{ steps.create-pr.outputs.pull-request-number }}/checks|#${{ steps.create-pr.outputs.pull-request-number }}>
            *Triggering Workflow:* <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Run>
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
