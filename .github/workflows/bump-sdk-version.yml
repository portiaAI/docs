name: Bump SDK Version

on:
  workflow_dispatch:  # Manual trigger
  repository_dispatch:  # Remote trigger
    types: [bump-sdk-version]

jobs:
  bump-sdk-version:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.DEPLOY_PAT_TOKEN }}
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Get latest commit hash from portia-sdk-python
        id: get-latest-commit
        run: |
          LATEST_COMMIT=$(curl -s https://api.github.com/repos/portiaAI/portia-sdk-python/commits/main | jq -r '.sha')
          echo "latest_commit=$LATEST_COMMIT" >> $GITHUB_OUTPUT
          echo "Latest commit hash: $LATEST_COMMIT"

      - name: Update pyproject.toml with latest commit hash
        run: |
          # Use the standalone script to update pyproject.toml
          uv run .github/scripts/update_sdk_version.py "${{ steps.get-latest-commit.outputs.latest_commit }}"

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create branch and commit changes
        id: create-branch
        run: |
          # Create new branch
          BRANCH_NAME="automated/bump-sdk-version-${{ steps.get-latest-commit.outputs.latest_commit }}"
          git checkout -b "$BRANCH_NAME"
          
          # Add pyproject.toml to staging
          git add pyproject.toml
          
          # Commit the changes
          git commit -m "ðŸ¤– Bump SDK version to ${{ steps.get-latest-commit.outputs.latest_commit }}"
          
          # Push the branch
          git push origin "$BRANCH_NAME"
          
          # Store branch name for later use
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "Created and pushed branch: $BRANCH_NAME"

      - name: Create Pull Request
        id: create-pr
        run: |
          BRANCH_NAME="${{ steps.create-branch.outputs.branch_name }}"
          
          # Create PR using GitHub CLI
          PR_OUTPUT=$(gh pr create \
            --title "ðŸ¤– Automated: Bump SDK version to latest commit" \
            --body "## ðŸ¤– Automated SDK Version Bump
          
          This PR updates the portia-sdk-python dependency to the latest commit hash.
          
          **Latest commit:** \`${{ steps.get-latest-commit.outputs.latest_commit }}\`
          
          **Changes:**
          - Updated \`pyproject.toml\` to use the latest commit hash from portiaAI/portia-sdk-python
          
          ---
          *This PR was automatically generated by the bump-sdk-version workflow.*" \
            --base main \
            --head "$BRANCH_NAME" \
            --label "automated" \
            --label "sdk-update")
          
          # Extract PR number from output
          PR_NUMBER=$(echo "$PR_OUTPUT" | grep -o '#[0-9]*' | head -1 | sed 's/#//')
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
          echo "Created PR #$PR_NUMBER from branch $BRANCH_NAME"
        env:
          GH_TOKEN: ${{ secrets.DEPLOY_PAT_TOKEN }}

      - name: Wait for PR checks to complete
        id: wait-for-checks
        run: |
          PR_NUMBER="${{ steps.create-pr.outputs.pr_number }}"
          echo "Waiting for PR #$PR_NUMBER checks to complete..."
          
          # Wait for checks to start
          sleep 30
          
          # Check status every 30 seconds for up to 30 minutes
          for i in {1..60}; do
            STATUS=$(curl -s -H "Authorization: token ${{ secrets.DEPLOY_PAT_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }}/status" | \
              jq -r '.state')
            
            echo "Check status: $STATUS (attempt $i/60)"
            
            if [ "$STATUS" = "success" ]; then
              echo "All checks passed!"
              echo "status=success" >> $GITHUB_OUTPUT
              break
            elif [ "$STATUS" = "failure" ] || [ "$STATUS" = "error" ]; then
              echo "Checks failed!"
              echo "status=failure" >> $GITHUB_OUTPUT
              break
            elif [ "$i" -eq 60 ]; then
              echo "Timeout waiting for checks to complete"
              echo "status=timeout" >> $GITHUB_OUTPUT
              break
            fi
            
            sleep 30
          done

      - name: Auto-merge PR if checks pass
        if: steps.wait-for-checks.outputs.status == 'success'
        run: |
          PR_NUMBER="${{ steps.create-pr.outputs.pr_number }}"
          echo "Auto-merging PR #$PR_NUMBER..."
          
          curl -X PUT \
            -H "Authorization: token ${{ secrets.DEPLOY_PAT_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/merge" \
            -d '{
              "commit_title": "ðŸ¤– Merge: Bump SDK version to ${{ steps.get-latest-commit.outputs.latest_commit }}",
              "commit_message": "Automated merge of SDK version bump",
              "merge_method": "squash"
            }'
          
          echo "PR #$PR_NUMBER merged successfully!"

      - name: Close PR and notify Slack on failure
        if: steps.wait-for-checks.outputs.status == 'failure' || steps.wait-for-checks.outputs.status == 'timeout'
        run: |
          PR_NUMBER="${{ steps.create-pr.outputs.pr_number }}"
          echo "Closing failed PR #$PR_NUMBER..."
          
          # Close the PR with a comment explaining why
          gh pr close $PR_NUMBER \
            --delete-branch \
            --comment "This PR was automatically closed because the checks failed. Status: ${{ steps.wait-for-checks.outputs.status }}"
          
          echo "PR #$PR_NUMBER closed successfully"
        env:
          GH_TOKEN: ${{ secrets.DEPLOY_PAT_TOKEN }}

      - name: Notify Slack on failure
        if: steps.wait-for-checks.outputs.status == 'failure' || steps.wait-for-checks.outputs.status == 'timeout'
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: '${{ vars.SLACK_RUN_CHANNEL }}'
          slack-message: |
            ðŸš¨ *Docs SDK Version Bump Failed*
            
            The automated docs SDK version bump PR has failed its checks.
            
            *PR:* <https://github.com/${{ github.repository }}/pull/${{ steps.create-pr.outputs.pr_number }}|#${{ steps.create-pr.outputs.pr_number }}>
            *Workflow:* <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Run>
            
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}